<?php
/**
 * @file models_nav.module.
 */

require_once 'models_nav.build_classes.inc';
require_once 'models_nav.yoga_area_landing_page.inc';

/**
 * Implements hook_block_info().
 */
function models_nav_block_info() {
  $blocks['event_nav'] = array(
    'info' => t('NAV: left hand side in event menu'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['settings_nav'] = array(
    'info' => t('NAV: left hand side on user settings page'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['social_nav_footer'] = array(
    'info' => t('Social icons for footer'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['yoga_classes_block'] = array(
    'info' => t('Yoga Classes Block'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['yoga_timetable_block'] = array(
    'info' => t('Yoga Timetable Block'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['yoga_area_lp'] = array(
    'info' => t('Yoga Area Landing Page'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function models_nav_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'settings_nav':
      $block['subject'] = t('Settings Nav');
      $block['content'] = theme('block_settings_nav');
      break;
    case 'social_nav_footer':
      $block['subject'] = t('Social Nav Footer');
      $block['content'] = social_nav_footer_block();
      break;
    case 'yoga_classes_block':
      $block['subject'] = t('Yoga Classes');
      $block['content'] = theme('yoga_classes_block');
      break;
    case 'yoga_timetable_block':
      $block['subject'] = t('Yoga Timetable');
      $block['content'] = theme('yoga_timetable_block');
      break;
    case 'yoga_area_lp':
      $block['subject'] = t('Yoga Timetable');
      $block['content'] = theme('yoga_area_lp');
      break;
  }
  return $block;
}

/**
 * Social icons for footer.
 */
function social_nav_footer_block() {
  global $user;
  $login = array();
  $login[] = l('<span class="fa fa-2x fa-envelope"></span> <span class="sr-only">' . t('Contact') . '</span>', 'mailto:', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-2x fa-facebook"></span> <span class="sr-only">' . t('Facebook') . '</span>', 'https://www.facebook.com/hairandbeautymodelsaustralia/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-2x fa-twitter"></span> <span class="sr-only">' . t('Twitter') . '</span>', 'https://twitter.com/hbm_australia', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-2x fa-instagram"></span> <span class="sr-only">' . t('Instagram') . '</span>', 'http://instagram.com/hairandbeautymodels', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-2x fa-pinterest"></span> <span class="sr-only">' . t('Pinterest') . '</span>', '/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-2x fa-google"></span> <span class="sr-only">' . t('Google') . '</span>', '/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l(t('#HBM'), 'user/login');
  $login[] = $user->uid == 0 ? l(t('Sign Up / Sign In'), 'user/login') : FALSE;
  $content = '<ul class="footer-social">';
  foreach ($login as $key => $link) {
    $content .= '<li>' . $link . '</li>';
  }
  $content .= '</ul>';
  return $content;
}

/**
 * Implements of hook_theme().
 */
function models_nav_theme() {
  return array(
    'block_settings_nav' => array(
      'template' => 'templates/block-settings-nav',
    ),
    'my_nav' => array(
      'template' => 'templates/my-nav',
    ),
    'social_nav' => array(
      'template' => 'templates/social-nav',
    ),
    'custom_nav' => array(
      'template' => 'templates/custom-nav',
    ),
    'home_nav' => array(
      'template' => 'templates/home-nav',
    ),
    'yoga_classes_block' => array(
      'template' => 'templates/yoga-classes-block',
    ),
    'yoga_timetable_block' => array(
      'template' => 'templates/yoga-timetable-block',
    ),
    'yoga_area_lp' => array(
      'template' => 'templates/yoga-area-lp-block',
    ),
  );
}

/**
 * Template preprocess for Yoga Classes widget block.
 */
function template_preprocess_yoga_classes_block(&$vars) {
  global $user;
  drupal_add_js(drupal_get_path('module', 'models_nav') . '/js/yoga_classes.js');
  try {

    if (!is_numeric(arg(1))) {
      $nid = explode('/', drupal_get_normal_path('studio/' . arg(1)));
      $nid = $nid[1];
    }
    else {
      $nid = arg(1);
    }
    $nw = entity_metadata_wrapper('node', $nid);

    $class_array = array();
    $make_edits = $user->uid == $nw->author->getIdentifier() ? TRUE : FALSE;

    if ($nw->field_yoga_classes->value()) {

      $res = views_get_view_result('yoga_classes', 'block_2', $nw->getIdentifier(), 'Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday');
      $class_array = build_yoga_class_array($res);
    }
    else {
      //
    }

    if (sizeof($class_array)) {
      $vars['class_data'] = build_yoga_class_data($class_array, $make_edits);
      $vars['class_header'] = build_yoga_class_widget_header($class_array);
    }
    else {
      $vars['class_header'] = FALSE;
    }
  } catch (EntityMetadataWrapperException $exc) {
    watchdog(
      'Models_nav classes block',
      'EntityMetadataWrapper exception in %function() @trace',
      array('%function' => __FUNCTION__, '@trace' => $exc->getTraceAsString()),
      WATCHDOG_ERROR
    );
  }
}

/**
 * Template preprocess for Yoga Classes Timetable block.
 */
function template_preprocess_yoga_timetable_block(&$vars) {
  global $user;
  drupal_add_js(drupal_get_path('module', 'models_nav') . '/js/yoga_classes.js');
  try {

    if (!is_numeric(arg(1))) {
      $nid = explode('/', drupal_get_normal_path(arg(0). '/' . arg(1)));
      $nid = $nid[1];
    }
    else {
      $nid = arg(1);
    }
    $nw = entity_metadata_wrapper('node', $nid);
    $make_edits = $user->uid == $nw->author->getIdentifier() ? TRUE : FALSE;

    $class_array = array();
    if ($nw->field_yoga_classes->value()) {
      $res = views_get_view_result('yoga_classes', 'block_2', $nw->getIdentifier(), 'Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday');
      $class_array = build_yoga_class_array($res);
    }

    if (sizeof($class_array)) {
      $class_data['Monday'] = !empty($class_array['Monday']) ? build_yoga_timetable_data($class_array['Monday'], $make_edits) : FALSE;
      $class_data['Tuesday'] = !empty($class_array['Tuesday']) ? build_yoga_timetable_data($class_array['Tuesday'], $make_edits) : FALSE;
      $class_data['Wednesday'] = !empty($class_array['Wednesday']) ? build_yoga_timetable_data($class_array['Wednesday'], $make_edits) : FALSE;
      $class_data['Thursday'] = !empty($class_array['Thursday']) ? build_yoga_timetable_data($class_array['Thursday'], $make_edits) : FALSE;
      $class_data['Friday'] = !empty($class_array['Friday']) ? build_yoga_timetable_data($class_array['Friday'], $make_edits) : FALSE;
      $class_data['Saturday'] = !empty($class_array['Saturday']) ? build_yoga_timetable_data($class_array['Saturday'], $make_edits) : FALSE;
      $class_data['Sunday'] = !empty($class_array['Sunday']) ? build_yoga_timetable_data($class_array['Sunday'], $make_edits) : FALSE;
      $vars['class_data'] = $class_data;
      $vars['class_array'] = $class_array;
      $vars['class_header'] = FALSE;
    }
    else {
      $vars['class_header'] = FALSE;
    }
  } catch (EntityMetadataWrapperException $exc) {
    watchdog(
      'Models_nav classes block',
      'EntityMetadataWrapper exception in %function() @trace',
      array('%function' => __FUNCTION__, '@trace' => $exc->getTraceAsString()),
      WATCHDOG_ERROR
    );
  }
}

/**
 * Template preprocess for Settings Nav.
 */
function template_preprocess_block_settings_nav(&$vars) {
  global $user;
  $nav = '<ul>';
  $nav .= '<li>' . l(t('Personal Information'), 'user/personal-information/settings', array('attributes' => array('class' => array('')))) . ' </li > ';
  $nav .= '<li>' . l(t('Account Settings'), 'user/account/settings', array('attributes' => array('class' => array('')))) . ' </li > ';
  // $nav .= '<li > ' . l(t('Profile'), 'user / profile / settings', array('attributes' => array('class' => array('')))) . ' </li > ';
//  $nav .= '<li>' . l(t('Interests'), 'user/interests/settings', array('attributes' => array('class' => array('')))) . ' </li > ';
  $nav .= '<li>' . l(t('Subscription Settings'), 'user/plan/settings', array('attributes' => array('class' => array('')))) . ' </li > ';
  $nav .= '</ul>';
  $vars['settings_nav'] = $nav;
}

/**
 * Template preprocess for Custom Job Nav.
 */
function template_preprocess_my_nav(&$vars) {
  global $user;

  if (isset($vars['classes_searcher'])) {

    if (strpos(current_path(), '/on/') !== FALSE) {
      $url = explode('/on/', current_path());
      $url = $url[0] . '/';
      $url_add = !empty(arg(5)) ? arg(5) : FALSE;
    }
    else {
      $url = current_path() . '/';
      $url_add = FALSE;
    }

    $params = drupal_get_query_parameters();
    if (!empty($params['after'])) {
      $query = $params;
    }
    else {
      $query = FALSE;
    }

    $nav = '<ul>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'monday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Monday'), $url . 'on/monday' . '/' . $url_add, array(
        'query' => $query,
        'attributes' => array('class' => array('class-monday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'tuesday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Tuesday'), $url . 'on/tuesday' . '/' . $url_add, array(
        'query' => $query,
        'attributes' => array('class' => array('class-tuesday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'wednesday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Wednesday'), $url . 'on/wednesday' . '/' . $url_add, array(
        'query' => $query,
        'attributes' => array('class' => array('class-wednesday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'thursday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Thursday'), $url . 'on/thursday' . '/' . $url_add, array(
        'query' => $query,
        'attributes' => array('class' => array('class-thursday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'friday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Friday'), $url . 'on/friday' . '/' . $url_add, array(
        'query' => $query,
        'attributes' => array('class' => array('class-friday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'saturday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Saturday'), $url . 'on/saturday', array(
        'query' => $query,
        'attributes' => array('class' => array('class-saturday ' . $active_class))
      )) . '</li>';

    if (strpos(current_path(), '/on/') === FALSE) {
      $active_class = strtolower(date('l', strtotime('now'))) == 'sunday' ? 'active' : '';
    }
    else {
      $active_class = '';
    }
    $nav .= '<li>' . l(t('Sunday'), $url . 'on/sunday', array(
        'query' => $query,
        'attributes' => array('class' => array('class-sunday ' . $active_class))
      )) . '</li>';
    $nav .= '<ul>';

    $vars['my_nav'] = $nav;
    $vars['nav_2'] = FALSE;
  }
  else {
    if (!isset($vars['user_nav'])) {
      $nw = tweaks_get_alias_wrapper();
      $alias = drupal_get_path_alias('node/' . $nw->getIdentifier());

      try {
        $nav = '<ul>';
        if ($nw->getBundle() == 'yoga') {
          if ($nw->field_yoga_type->value() != 'event') {
            $nav .= '<li>' . l(t('View'), 'node/' . $nw->getIdentifier(), array('attributes' => array('class' => array('')))) . ' </li> ';
            $nav .= '<li>' . l(t('Edit'), 'listing/' . $nw->getIdentifier() . '/edit', array('attributes' => array('class' => array('')))) . ' </li> ';

            if ($nw->author->field_yf_subscription->value() != 'free') {

              if ($nw->author->field_yf_subscription->value() == 'premium') {
                $nav .= '<li>' . l(t('Instagram'), 'listing/instagram/' . $nw->getIdentifier() . '/edit', array('attributes' => array('class' => array('')))) . ' </li> ';
              }

              if ($nw->author->field_my_posts->value()) {
                $posts = 0;
                foreach ($nw->author->field_my_posts->getIterator() as $key => $value) {
                  if ($value->promote->value()){
                    $posts++;
                  }
                }
              }
              $amt = $nw->author->field_my_posts->value() ? ' (' . $posts . ')' : '';
              $nav .= '<li>' . l(t('Posts') . $amt, $alias . '/posts', array('attributes' => array('class' => array('')))) . ' </li> ';
              $nav .= '<li>' . l(t('Gallery'), $alias . '/posts', array('attributes' => array('class' => array('')))) . ' </li> ';

              $amt = $nw->field_yoga_classes->value() ? ' (' . sizeof($nw->field_yoga_classes->value()) . ')' : '';
              $nav .= '<li>' . l(t('Timetable') . $amt, $alias . '/timetable', array('attributes' => array('class' => array('')))) . ' </li> ';

              $amt = $nw->field_yoga_event_list->value() ? ' (' . sizeof($nw->field_yoga_event_list->value()) . ')' : '';
              $nav .= '<li>' . l(t('Events') . $amt, $alias . '/events', array('attributes' => array('class' => array('')))) . ' </li> ';

              if ($nw->field_yoga_type->value() == 'studio') {
                $amt = $nw->field_yoga_teachers->value() ? ' (' . sizeof($nw->field_yoga_teachers->value()) . ')' : '';
                $nav .= '<li>' . l(t('Teachers') . $amt, $alias . '/teachers', array('attributes' => array('class' => array('')))) . ' </li> ';
            }


            }
          }
          else {
            $nav .= '<li>' . l(t('View'), 'node/' . $nw->getIdentifier(), array('attributes' => array('class' => array('')))) . ' </li> ';
            $nav .= '<li>' . l(t('Edit'), 'event/' . arg(1) . '/edit', array('attributes' => array('class' => array('')))) . ' </li> ';
          }
        }
        else {
          $nav .= '<li>' . l(t('View'), 'node/' . $nw->getIdentifier(), array('attributes' => array('class' => array('')))) . ' </li> ';
          $nav .= '<li>' . l(t('Edit'), 'post/' . arg(1) . '/edit', array('attributes' => array('class' => array('')))) . ' </li> ';
        }
      } catch (EntityMetadataWrapperException $exc) {
        watchdog(
          'models_nav',
          'EntityMetadataWrapper exception in %function() @trace',
          array(
            '%function' => __FUNCTION__,
            '@trace' => $exc->getTraceAsString()
          ),
          WATCHDOG_ERROR
        );
      }
      $nav .= '</ul>';
      $vars['my_nav'] = $nav;
      $vars['nav_2'] = FALSE;
    }
    else {
      drupal_add_js(libraries_get_path('slick') . '/' . 'slick/slick.min.js');
      drupal_add_css(libraries_get_path('slick') . '/' . 'slick/slick.css');
      drupal_add_css(libraries_get_path('slick') . '/' . 'slick/slick-theme.css');
      drupal_add_js(drupal_get_path('module', 'models_nav') . '/js/models_nav.js');

      if (!isset($vars['someone_else'])) {
        $my_jobs_count_ = views_get_view_result('user_profile_jobs', 'block_3');
        $my_jobs_count = sizeof($my_jobs_count_) > 0 ? '<span class="badge">' . sizeof($my_jobs_count_) . '</span>' : FALSE;

        $uw = entity_metadata_wrapper('user', $vars['user_nav']);
//        if ($uw->field_flags_running_posts->value() != sizeof($my_jobs_count_)) {
//          $uw->field_flags_running_posts->set(sizeof($my_jobs_count_));
//          $uw->save();
//        }

        $my_requests_count = sizeof(views_get_view_result('user_profile_jobs', 'page_1')) ? '<span class="badge">' . sizeof(views_get_view_result('user_profile_jobs', 'page_1')) . '</span>' : FALSE;

        $nav = '<ul>';
        $nav .= '<li>' . l(t('Dashboard'), 'user/' . $uw->getIdentifier(), array('attributes' => array('class' => array('')))) . '</li>';
        $nav .= '<li>' . l(t('Settings'), 'user/personal-information/settings', array('attributes' => array('class' => array('')))) . '</li>';
//      $nav .= '<li>' . l(t('Photos'), 'user/photos', array('attributes' => array('class' => array('')))) . '</li>';
//      $nav .= '<li>' . l(t('My Feedback'), 'user/' . $uw->getIdentifier() . '/feedback', array('attributes' => array('class' => array('')))) . '</li>';
//      $nav .= '<li>' . l(t('My Jobs') . $my_jobs_count, 'my-jobs', array(
//          'html' => TRUE,
//          'attributes' => array('class' => array(''))
//        )) . '</li>';
//      $nav .= '<li>' . l(t('My Requests') . $my_requests_count, 'job-requests', array(
//          'html' => TRUE,
//          'attributes' => array('class' => array(''))
//        )) . '</li>';
//        $nav .= '<li>' . l(t('Favourites'), 'watchlist', array('attributes' => array('class' => array('')))) . '</li>';
//      $nav .= '<li>' . l(t('Previous Jobs'), 'previous-jobs', array('attributes' => array('class' => array('')))) . '</li>';
        $nav .= '<li class="last">' . l(t('Logout'), 'user/logout', array('attributes' => array('class' => array('')))) . '</li>';
        $nav .= '</ul>';
        $vars['my_nav'] = $nav;

        $nav_2 = '<ul class="pull-right nav-2">';
        $nav_2 .= '<li>' . l(t('Logout'), 'user/logout', array('attributes' => array('class' => array('')))) . '</li>';
        $nav_2 .= '</ul>';
        $vars['nav_2'] = $nav_2;
      }
      else {
        $uw = entity_metadata_wrapper('user', arg(1));
        $nav = '<ul>';
        $nav .= '<li>' . l($uw->label() . '\'s ' . t('profile'), 'user/' . arg(1), array('attributes' => array('class' => array('')))) . '</li>';
//        $nav .= '<li>' . l(t('Feedback'), 'user/' . arg(1) . '/feedback', array('attributes' => array('class' => array('')))) . '</li>';
        $nav .= '</ul>';
        $vars['my_nav'] = $nav;
        $vars['nav_2'] = FALSE;
      }
    }
  }
}

/**
 * Template preprocess for Socal Nav.
 */
function template_preprocess_social_nav(&$vars) {
  global $user;
  $info = array();
  $info[] = l(t('TCs'), 'terms');
  $info[] = l(t('Contact'), 'contact');
  $info[] = l(t('About'), 'about');
  // $info[] = l(t('Sign Up / Sign In'), 'user/login');

  $login = array();
  $login[] = l('<span class="fa fa-envelope"></span> <span class="sr-only">' . t('Contact') . '</span>', '/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-facebook"></span> <span class="sr-only">' . t('Facebook') . '</span>', 'https://www.facebook.com/hairandbeautymodelsaustralia/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-twitter"></span> <span class="sr-only">' . t('Twitter') . '</span>', 'https://twitter.com/hbm_australia', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-instagram"></span> <span class="sr-only">' . t('Instagram') . '</span>', 'http://instagram.com/hairandbeautymodels', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-pinterest"></span> <span class="sr-only">' . t('Pinterest') . '</span>', '/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  $login[] = l('<span class="fa fa-google"></span> <span class="sr-only">' . t('Google') . '</span>', '/', array(
    'html' => TRUE,
    'attributes' => array('class' => array('social-icon'))
  ));
  // $login[] = $user->uid == 0 ? l(t('Sign Up / Sign In'), 'user/login') : FALSE;

  $links = '<ul class="social-icons-nav pull-right">';
  foreach ($login as $key => $value) {
    $links .= '<li>' . $value . '</li>';
  }
  $links .= '</ul>';

  $links_left = '<ul class="info-nav pull-left">';
  foreach ($info as $key => $value) {
    $links_left .= '<li>' . $value . '</li>';
  }
  $links_left .= '</ul>';

  $vars['links_right'] = '<nav role="navigation">' . $links . '</nav>';
  $vars['links_left'] = '<nav role="navigation">' . $links_left . '</nav>';
}

/**
 * Template preprocess for Custom Nav.
 */
function template_preprocess_home_nav(&$vars) {
  global $user;
  $uw = entity_metadata_wrapper('user', $user);

  $search_form = drupal_get_form('models_searcher_form_dupe');

  if (!drupal_is_front_page()) {
    $links = '<li class="first leaf">' .
      l('<i class="material-icons">&#xE8B6;</i> Search <i class="material-icons">&#xE5C5;</i>', 'search/type/beauty', array(
          'html' => TRUE,
          'attributes' => array(
            'data-toggle' => 'dropdown',
            'aria-haspopup' => 'true',
            'aria-expanded' => 'false',
          )
        )
      ) . drupal_render($search_form) . '</li>';
  }
  else {
    $links = '';
  }

  $links .= '<li class="leaf">' . l('Studios', 'yoga') . '</li>';
  $links .= '<li class="leaf">' . l('Classes', 'classes') . '</li>';
  $links .= '<li class="leaf">' . l('Events', 'events') . '</li>';
  $links .= '<li class="leaf">' . l('Posts', 'posts') . '</li>';
  $links .= '<li class="leaf">' . l('<span class="nav-btn">Sign Up / Sign In<span>', 'user/login', array('html' => TRUE)) . '</li>';
  $vars['links'] = $links;
}

/**
 * Template preprocess for Custom Nav.
 */
function template_preprocess_custom_nav(&$vars) {
  global $user;
  $uw = entity_metadata_wrapper('user', $user);

  $search_form = drupal_get_form('models_searcher_form_dupe');

  if (!drupal_is_front_page()) {
  $links = '<li class="first leaf">' .
    l('<i class="material-icons">&#xE8B6;</i> Search <i class="material-icons">&#xE5C5;</i>', 'search/type/beauty', array(
        'html' => TRUE,
        'attributes' => array(
          'data-toggle' => 'dropdown',
          'aria-haspopup' => 'true',
          'aria-expanded' => 'false',
        )
      )
    ) . drupal_render($search_form) . '</li>';
  }
  else {
    $links = '';
  }

  $links .= '<li class="leaf">' . l('Studios', 'yoga') . '</li>';
  $links .= '<li class="leaf">' . l('Classes', 'classes') . '</li>';
  $links .= '<li class="leaf">' . l('Events', 'events') . '</li>';
  $links .= '<li class="leaf">' . l('Posts', 'posts') . '</li>';

  if ($uw->field_my_listings->value()) {
    $listing_url = l(t('View listing'), 'node/' . $uw->field_my_listings->value()[0]->nid);
  }
  else {
    $listing_url = l('Create listing', 'listing/add');
  }

  $dropdown = '<ul role="menu" aria-labelledby="User profile" class="dropdown-menu dropdown-menu-yogafind">
                <li role="presentation" class="res">' . l('View profile', 'user/' . $uw->getIdentifier()) . '</li>
                <li role="presentation" class="res">' . $listing_url . '</li>
                <li role="presentation" class="res">' . l('Logout', 'user/logout') . '</li>
              </ul> ';

  $mypic = $uw->value()->picture;
  if ($mypic) {
    $pic = '<div class="my-image img-circle" > ' . theme('image_style', array(
        'style_name' => 'profile',
        'path' => $uw->value()->picture->uri,
        'attributes' => array('class' => array('img - circle'))
      )) . ' </div > ';
  }
  else {
    $pic = '<div class="my-image img-circle" > ' . theme('image_style', array(
        'style_name' => 'profile',
        'path' => 'public://pictures/picture-default.png',
        'attributes' => array('class' => array('img-circle'))
      )) . '</div>';
  }

  $pic .= '<i class="material-icons">&#xE5C5;</i>';

//  $active_msgs = current_path() == 'user' ? 'active' : FALSE;
  $fname = $uw->field_first_name->value() ? $uw->field_first_name->value() : t('Me');

  $links .= '<li role="presentation" class="last leaf a-dd dropdown">' .
    l('<span>' . $fname . '</span>' . $pic, 'user', array(
        'html' => TRUE,
        'attributes' => array(
          'data-toggle' => 'dropdown',
          'aria-haspopup' => 'true',
          'aria-expanded' => 'false',
        )
      )
    ) . $dropdown . '</li>';

  $links .= '<li class="visible-xs leaf">' . l('Logout', 'user/logout') . '</li>';

  $vars['links'] = $links;

// $variables['my_menu'] =
//   '<ul class="menu nav navbar-nav my-menu">
//     <li class="first leaf '.$active_link.'">
//       '.$link.$active_menu.'
//     </li>
//   </ul>';
}

